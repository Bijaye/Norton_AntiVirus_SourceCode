////////////////////////
//
// PROPRIETARY / CONFIDENTIAL.
// Use of this product is subject to license terms.
// Copyright © 2006 Symantec Corporation.
// All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////////////////////////

// EventQueue.h: interface for the CAlertList class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_EVENTQUEUE_H__1155344E_1C06_4287_B948_848DF7128A06__INCLUDED_)
#define AFX_EVENTQUEUE_H__1155344E_1C06_4287_B948_848DF7128A06__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

// Disable identifier truncation warning generated by
// standard C++ library stuff.
#pragma warning( disable: 4786 )

#include <list>
#include <map>

class CAlertList  
{
public:
	CAlertList();
	virtual ~CAlertList();

	bool Initialize(HWND hWndParent);
	void Insert(ALERT_ITEM alert);

	static unsigned __stdcall threadProc(void* pData);

private:
	// Disallowed.
	CAlertList(const CAlertList &);
	
	// This function displays alerts in queue.
	void processAlert(ALERT_ITEM alert);

	// This functions process alert in the lists.
	void processQueue();

	// This function fetches the next element from the queue 
	// of alerts.
	bool getNextAlert( ALERT_ITEM &alert );

private:
	// Queue object.
    std::list<ALERT_ITEM>					m_list;

	// Critical section for the queue.
    StahlSoft::CWin32CriticalSection m_critList;

	// Insertion event handle.
    StahlSoft::CSmartHandle		m_shInsertion;

	// Stop event handle
	StahlSoft::CSmartHandle		m_shStopEvent;

	// Thread ID			
	StahlSoft::CSmartHandle 	m_shThread;

	// Parent window for popups.
	HWND						m_hWndParent;

	SIMON::CSimonPtr<IAlertDlg> m_spAlertDlg;
};

#endif // !defined(AFX_EVENTQUEUE_H__1155344E_1C06_4287_B948_848DF7128A06__INCLUDED_)
