#----------------------------------------------------------------------------
# This stub makefile used to build subprojects, generated by MSVC++ with
# the help of TWEAKMAK.EXE utility.
#
# Note:  following environment variables must be set:
#        1. THIS_PROJECT_NAME       ex: 'testdll'
#        2. THIS_LIBRARY_NAME       ex: 'my_lib' - if DLL project or empty (""). 
#                                    Library name may be different from DLL name.
#        3. THIS_PROJECT_MAKEFILE   ex: 'my_prj.mak' - name of tweaked makefile.
#        ------
#
#        THIS_PROJECT_NAME, THIS_LIBRARY_NAME - will be set via M.CMD of subproject.
#        THIS_PROJECT_MAKEFILE                - will be set by IUNIMAKE.CMD
#----------------------------------------------------------------------------

!IF "$(BLDDEBUG)" == ""
CFG=$(THIS_PROJECT_NAME) - Win32 Release
!ELSE
CFG=$(THIS_PROJECT_NAME) - Win32 Debug
!ENDIF

!include $(THIS_PROJECT_MAKEFILE)

!if "$(LANGTYPE)" == "DBCS"
!IF "$(DBCS_LIB)" == ""
!MESSAGE Using default DBCS library "dbcsvcnt.lib"
!MESSAGE Set the variable DBCS_LIB in the project makefile for the proper DBCS library
DBCS_LIB=dbcsvcnt.lib
!ENDIF
LINK32_FLAGS=$(LINK32_FLAGS) $(DBCS_LIB)
!ENDIF

# when THIS_LIBRARY_NAME is defined, it identifies either a static library or DLL project
# LIB32 is a macro defined by the MSVC IDE when the project type is a static library
# LINK32 is a macro defined by the MSVC IDE when the project type is a DLL
!IF "$(THIS_LIBRARY_NAME)" != ""
!IF "$(LIB32)" != ""
PROJ_TYPE=STATIC LIB
COMPILE_DEPS=$(LIB32_OBJS)
!ELSE
PROJ_TYPE=DLL
COMPILE_DEPS=$(LINK32_OBJS)
!ENDIF
!ELSE
PROJ_TYPE=EXE
COMPILE_DEPS=$(LINK32_OBJS)
!ENDIF

!MESSAGE *** Project type: $(PROJ_TYPE) ***

# Also supported through MSVC - generated MAK file:
#
# clean:  - will erase all built files (OBJs,LIBs,EXEs...)
# all:    - will build all

# for MSVC IDE "Rebuild all" command
buildall: clean all

depend:

# the COMPILE_DEPS are defined based on the project type above
compile: $(COMPILE_DEPS)

help:

# when building a 'static lib' project, the library step is invoked to product the static library
# when building a DLL project, the 'library' step is invoked to produce a import library only.
library:
!IF "$(PROJ_TYPE)" == "STATIC LIB"
    $(LIB32) @<<
  $(LIB32_FLAGS) $(DEF_FLAGS) $(LIB32_OBJS)
<<
   @if exist $(LIBD)\$(THIS_LIBRARY_NAME).EXP    del   $(LIBD)\$(THIS_LIBRARY_NAME).EXP
!ELSEIF "$(PROJ_TYPE)" == "DLL"
   LIB /DEF: $(LINK32_OBJS) $(ADD_STATIC_LIBS) /DEF:$(THIS_PROJECT_NAME).def /MACHINE:IX86 /OUT:$(LIBD)\$(THIS_LIBRARY_NAME).LIB
   @if exist $(LIBD)\$(THIS_LIBRARY_NAME).EXP    del   $(LIBD)\$(THIS_LIBRARY_NAME).EXP
!ENDIF

# when building a 'static lib' project, the exedll step is not required
exedll:
!IF "$(PROJ_TYPE)" != "STATIC LIB"
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<
   @if exist $(OUTDIR)\$(THIS_LIBRARY_NAME).exp  del   $(OUTDIR)\$(THIS_LIBRARY_NAME).exp
   @if exist $(OUTDIR)\$(THIS_LIBRARY_NAME).lib  del   $(OUTDIR)\$(THIS_LIBRARY_NAME).lib
!ENDIF

debug:   all

release: all

