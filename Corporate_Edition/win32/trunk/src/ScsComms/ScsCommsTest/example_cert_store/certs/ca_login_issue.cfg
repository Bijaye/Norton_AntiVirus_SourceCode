#
# ca_login_issue.cfg
#
# OpenSSL configuration file for issuing Symantec AntiVirus
# and Symantec Client Security Login certificates.
#

#
# Command lines:
#
# openssl ca -config ./certs/ca_login_issue.cfg -name scs_admin_login    -in user.csr -out user-admin.cer    -batch -notext
# openssl ca -config ./certs/ca_login_issue.cfg -name scs_readonly_login -in user.csr -out user-readonly.cer -batch -notext
#

# We need to produce some random data from which to generate crypto data
# RANDFILE               = ./.rnd

####################################################################

[ ca ]

# no default section, because it should be specified on the command line

[ scs_admin_login ]

dir                    = ./certs
certificate            = $dir/BUGSBUNNY.00112233445566778899AABBCCDDEEFF.0.loginca.cer
database               = $dir/user_login/index.txt
new_certs_dir          = $dir/user_login
private_key            = ./private-keys/BUGSBUNNY.00112233445566778899AABBCCDDEEFF.0.loginca.pvk
serial                 = $dir/user_login/serial.dat
unique_subject         = no

default_md             = sha1
default_days           = 1825 # 5 years for now
preserve               = yes  # preserve DN ordering from request
copy_extensions        = copy # copy any x509 extensions from request that are not explicitly defined in our ca policy

policy                 = scs_login_policy
x509_extensions        = scs_admin_login_extensions

[ scs_readonly_login ]

dir                    = ./certs
certificate            = $dir/BUGSBUNNY.00112233445566778899AABBCCDDEEFF.0.loginca.cer
database               = $dir/user_login/index.txt
new_certs_dir          = $dir/user_login
private_key            = ./private-keys/BUGSBUNNY.00112233445566778899AABBCCDDEEFF.0.loginca.pvk
serial                 = $dir/user_login/serial.dat
unique_subject         = no

default_md             = sha1
default_days           = 1825 # 5 years for now
preserve               = yes  # preserve DN ordering from request
copy_extensions        = copy # copy any x509 extensions from request that are not explicitly defined in our ca policy

policy                 = scs_login_policy
x509_extensions        = scs_readonly_login_extensions

[ scs_login_policy ]

countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
emailAddress           = optional
commonName             = supplied # MUST be the same as the login name

[ scs_admin_login_extensions ]

nsComment              = "Symantec Client Security User Login certificate generated with OpenSSL"
basicConstraints       = critical,CA:false # cert generated by this request cannot be used as a CA
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName         = URI:roles://admin
authorityKeyIdentifier = keyid:always

[ scs_readonly_login_extensions ]

nsComment              = "Symantec Client Security User Login certificate generated with OpenSSL"
basicConstraints       = critical,CA:false # cert generated by this request cannot be used as a CA
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName         = URI:roles://readonly
authorityKeyIdentifier = keyid:always
