// PROPRIETARY/CONFIDENTIAL. Use of this product is subject to license terms.
// Copyright (c) 2005 Symantec Corporation. All rights reserved.
#ifndef __LDVPTASKFS_H__
#define __LDVPTASKFS_H__

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CLDVPTaskFS wrapper class

class CLDVPTaskFS : public CWnd
{
private:
	CLSID m_clsid;
protected:
	DECLARE_DYNCREATE(CLDVPTaskFS)
public:
	CLSID const& GetClsid()	{ return m_clsid; };
	void SetCLSID( CLSID clsid ){ m_clsid = clsid; };
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetCaption();
	void SetCaption(LPCTSTR);
	BOOL GetRecordingSchedule();
	void SetRecordingSchedule(BOOL);
	BOOL GetSkipFirst();
	void SetSkipFirst(BOOL);
	CString GetHelpFilename();
	void SetHelpFilename(LPCTSTR);
	BOOL GetRecording();
	void SetRecording(BOOL);
	CString GetTaskName();
	void SetTaskName(LPCTSTR);
	CString GetTaskDescription();
	void SetTaskDescription(LPCTSTR);
	CString GetTaskDescriptiveName();
	void SetTaskDescriptiveName(LPCTSTR);

// Operations
public:
	BOOL Deinitialize();
	BOOL EndTask();
	BOOL StartTask(long dwID);
	BOOL Initialize();
	BOOL DoModalSchedule(LPCTSTR lpstrSubKey, short iKey);
	BOOL DoModalConfig(long dwPagemask);
	BOOL DeleteTask();
};

#endif // __LDVPTASKFS_H__
